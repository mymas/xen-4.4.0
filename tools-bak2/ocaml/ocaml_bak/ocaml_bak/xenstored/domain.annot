"domain.ml" 19 689 693 "domain.ml" 19 689 698
type(
  ('a, unit, string, unit) format4 -> 'a
)
ident(
  def debug "domain.ml" 20 732 732 "domain.ml" 1 0 -1
)
"domain.ml" 19 689 699 "domain.ml" 19 689 702
type(
  ('a, unit, string, unit) format4
)
ident(
  def fmt "domain.ml" 19 689 705 "domain.ml" 19 689 731
)
"domain.ml" 19 689 705 "domain.ml" 19 689 718
type(
  string -> ('a, unit, string, unit) format4 -> 'a
)
ident(
  ext_ref Logging.debug
)
"domain.ml" 19 689 719 "domain.ml" 19 689 727
type(
  string
)
"domain.ml" 19 689 728 "domain.ml" 19 689 731
type(
  ('a, unit, string, unit) format4
)
ident(
  int_ref fmt "domain.ml" 19 689 699 "domain.ml" 19 689 702
)
"domain.ml" 19 689 705 "domain.ml" 19 689 731
call(
  tail
)
type(
  'a
)
"domain.ml" 20 732 736 "domain.ml" 20 732 740
type(
  ('a, unit, string, unit) format4 -> 'a
)
ident(
  def warn "domain.ml" 22 776 776 "domain.ml" 1 0 -1
)
"domain.ml" 20 732 742 "domain.ml" 20 732 745
type(
  ('a, unit, string, unit) format4
)
ident(
  def fmt "domain.ml" 20 732 748 "domain.ml" 20 732 774
)
"domain.ml" 20 732 748 "domain.ml" 20 732 760
type(
  string -> ('a, unit, string, unit) format4 -> 'a
)
ident(
  ext_ref Logging.warn
)
"domain.ml" 20 732 762 "domain.ml" 20 732 770
type(
  string
)
"domain.ml" 20 732 771 "domain.ml" 20 732 774
type(
  ('a, unit, string, unit) format4
)
ident(
  int_ref fmt "domain.ml" 20 732 742 "domain.ml" 20 732 745
)
"domain.ml" 20 732 748 "domain.ml" 20 732 774
call(
  tail
)
type(
  'a
)
"domain.ml" 33 966 970 "domain.ml" 33 966 978
type(
  t -> string
)
ident(
  def get_path "domain.ml" 34 1026 1026 "domain.ml" 1 0 -1
)
"domain.ml" 33 966 979 "domain.ml" 33 966 982
type(
  t
)
ident(
  def dom "domain.ml" 33 966 985 "domain.ml" 33 966 1025
)
"domain.ml" 33 966 985 "domain.ml" 33 966 1001
type(
  string
)
"domain.ml" 33 966 1002 "domain.ml" 33 966 1003
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"domain.ml" 33 966 1005 "domain.ml" 33 966 1012
type(
  (Xenctrl.domid -> string, unit, string) format -> Xenctrl.domid -> string
)
ident(
  ext_ref Printf.sprintf
)
"domain.ml" 33 966 1013 "domain.ml" 33 966 1017
type(
  (Xenctrl.domid -> string, unit, string) format
)
"domain.ml" 33 966 1018 "domain.ml" 33 966 1021
type(
  t
)
ident(
  int_ref dom "domain.ml" 33 966 979 "domain.ml" 33 966 982
)
"domain.ml" 33 966 1018 "domain.ml" 33 966 1024
type(
  Xenctrl.domid
)
"domain.ml" 33 966 1004 "domain.ml" 33 966 1025
call(
  stack
)
type(
  string
)
"domain.ml" 33 966 985 "domain.ml" 33 966 1025
call(
  tail
)
type(
  string
)
"domain.ml" 34 1026 1030 "domain.ml" 34 1026 1036
type(
  t -> Xenctrl.domid
)
ident(
  def get_id "domain.ml" 35 1056 1056 "domain.ml" 1 0 -1
)
"domain.ml" 34 1026 1037 "domain.ml" 34 1026 1043
type(
  t
)
ident(
  def domain "domain.ml" 34 1026 1046 "domain.ml" 34 1026 1055
)
"domain.ml" 34 1026 1046 "domain.ml" 34 1026 1052
type(
  t
)
ident(
  int_ref domain "domain.ml" 34 1026 1037 "domain.ml" 34 1026 1043
)
"domain.ml" 34 1026 1046 "domain.ml" 34 1026 1055
type(
  Xenctrl.domid
)
"domain.ml" 35 1056 1060 "domain.ml" 35 1056 1073
type(
  t -> Xenmmap.mmap_interface
)
ident(
  def get_interface "domain.ml" 36 1090 1090 "domain.ml" 1 0 -1
)
"domain.ml" 35 1056 1074 "domain.ml" 35 1056 1075
type(
  t
)
ident(
  def d "domain.ml" 35 1056 1078 "domain.ml" 35 1056 1089
)
"domain.ml" 35 1056 1078 "domain.ml" 35 1056 1079
type(
  t
)
ident(
  int_ref d "domain.ml" 35 1056 1074 "domain.ml" 35 1056 1075
)
"domain.ml" 35 1056 1078 "domain.ml" 35 1056 1089
type(
  Xenmmap.mmap_interface
)
"domain.ml" 36 1090 1094 "domain.ml" 36 1090 1101
type(
  t -> nativeint
)
ident(
  def get_mfn "domain.ml" 37 1112 1112 "domain.ml" 1 0 -1
)
"domain.ml" 36 1090 1102 "domain.ml" 36 1090 1103
type(
  t
)
ident(
  def d "domain.ml" 36 1090 1106 "domain.ml" 36 1090 1111
)
"domain.ml" 36 1090 1106 "domain.ml" 36 1090 1107
type(
  t
)
ident(
  int_ref d "domain.ml" 36 1090 1102 "domain.ml" 36 1090 1103
)
"domain.ml" 36 1090 1106 "domain.ml" 36 1090 1111
type(
  nativeint
)
"domain.ml" 37 1112 1116 "domain.ml" 37 1112 1131
type(
  t -> int
)
ident(
  def get_remote_port "domain.ml" 39 1151 1151 "domain.ml" 1 0 -1
)
"domain.ml" 37 1112 1132 "domain.ml" 37 1112 1133
type(
  t
)
ident(
  def d "domain.ml" 37 1112 1136 "domain.ml" 37 1112 1149
)
"domain.ml" 37 1112 1136 "domain.ml" 37 1112 1137
type(
  t
)
ident(
  int_ref d "domain.ml" 37 1112 1132 "domain.ml" 37 1112 1133
)
"domain.ml" 37 1112 1136 "domain.ml" 37 1112 1149
type(
  int
)
"domain.ml" 39 1151 1155 "domain.ml" 39 1151 1168
type(
  t -> bool
)
ident(
  def is_bad_domain "domain.ml" 40 1196 1196 "domain.ml" 1 0 -1
)
"domain.ml" 39 1151 1169 "domain.ml" 39 1151 1175
type(
  t
)
ident(
  def domain "domain.ml" 39 1151 1178 "domain.ml" 39 1151 1195
)
"domain.ml" 39 1151 1178 "domain.ml" 39 1151 1184
type(
  t
)
ident(
  int_ref domain "domain.ml" 39 1151 1169 "domain.ml" 39 1151 1175
)
"domain.ml" 39 1151 1178 "domain.ml" 39 1151 1195
type(
  bool
)
"domain.ml" 40 1196 1200 "domain.ml" 40 1196 1211
type(
  t -> unit
)
ident(
  def mark_as_bad "domain.ml" 42 1248 1248 "domain.ml" 1 0 -1
)
"domain.ml" 40 1196 1212 "domain.ml" 40 1196 1218
type(
  t
)
ident(
  def domain "domain.ml" 40 1196 1221 "domain.ml" 40 1196 1246
)
"domain.ml" 40 1196 1221 "domain.ml" 40 1196 1227
type(
  t
)
ident(
  int_ref domain "domain.ml" 40 1196 1212 "domain.ml" 40 1196 1218
)
"domain.ml" 40 1196 1242 "domain.ml" 40 1196 1246
type(
  bool
)
"domain.ml" 40 1196 1221 "domain.ml" 40 1196 1246
type(
  unit
)
"domain.ml" 42 1248 1252 "domain.ml" 42 1248 1266
type(
  Xeneventchn.t option -> string
)
ident(
  def string_of_port "domain.ml" 46 1345 1345 "domain.ml" 1 0 -1
)
"domain.ml" 43 1278 1280 "domain.ml" 43 1278 1284
type(
  Xeneventchn.t option
)
"domain.ml" 43 1278 1288 "domain.ml" 43 1278 1294
type(
  string
)
"domain.ml" 44 1295 1302 "domain.ml" 44 1295 1303
type(
  Xeneventchn.t
)
ident(
  def x "domain.ml" 44 1295 1307 "domain.ml" 44 1295 1343
)
"domain.ml" 44 1295 1297 "domain.ml" 44 1295 1303
type(
  Xeneventchn.t option
)
"domain.ml" 44 1295 1307 "domain.ml" 44 1295 1320
type(
  int -> string
)
ident(
  ext_ref Pervasives.string_of_int
)
"domain.ml" 44 1295 1322 "domain.ml" 44 1295 1340
type(
  Xeneventchn.t -> int
)
ident(
  ext_ref Xeneventchn.to_int
)
"domain.ml" 44 1295 1341 "domain.ml" 44 1295 1342
type(
  Xeneventchn.t
)
ident(
  int_ref x "domain.ml" 44 1295 1302 "domain.ml" 44 1295 1303
)
"domain.ml" 44 1295 1321 "domain.ml" 44 1295 1343
call(
  stack
)
type(
  int
)
"domain.ml" 44 1295 1307 "domain.ml" 44 1295 1343
call(
  tail
)
type(
  string
)
"domain.ml" 42 1248 1269 "domain.ml" 44 1295 1343
type(
  Xeneventchn.t option -> string
)
"domain.ml" 46 1345 1349 "domain.ml" 46 1345 1353
type(
  t -> out_channel -> unit
)
ident(
  def dump "domain.ml" 49 1431 1431 "domain.ml" 1 0 -1
)
"domain.ml" 46 1345 1354 "domain.ml" 46 1345 1355
type(
  t
)
ident(
  def d "domain.ml" 46 1345 1356 "domain.ml" 47 1363 1429
)
"domain.ml" 46 1345 1356 "domain.ml" 46 1345 1360
type(
  out_channel
)
ident(
  def chan "domain.ml" 47 1363 1364 "domain.ml" 47 1363 1429
)
"domain.ml" 47 1363 1364 "domain.ml" 47 1363 1371
type(
  out_channel ->
  (Xenctrl.domid -> nativeint -> string -> unit, out_channel, unit) format ->
  Xenctrl.domid -> nativeint -> string -> unit
)
ident(
  ext_ref Printf.fprintf
)
"domain.ml" 47 1363 1372 "domain.ml" 47 1363 1376
type(
  out_channel
)
ident(
  int_ref chan "domain.ml" 46 1345 1356 "domain.ml" 46 1345 1360
)
"domain.ml" 47 1363 1377 "domain.ml" 47 1363 1394
type(
  (Xenctrl.domid -> nativeint -> string -> unit, out_channel, unit) format
)
"domain.ml" 47 1363 1395 "domain.ml" 47 1363 1396
type(
  t
)
ident(
  int_ref d "domain.ml" 46 1345 1354 "domain.ml" 46 1345 1355
)
"domain.ml" 47 1363 1395 "domain.ml" 47 1363 1399
type(
  Xenctrl.domid
)
"domain.ml" 47 1363 1400 "domain.ml" 47 1363 1401
type(
  t
)
ident(
  int_ref d "domain.ml" 46 1345 1354 "domain.ml" 46 1345 1355
)
"domain.ml" 47 1363 1400 "domain.ml" 47 1363 1405
type(
  nativeint
)
"domain.ml" 47 1363 1407 "domain.ml" 47 1363 1421
type(
  Xeneventchn.t option -> string
)
ident(
  int_ref string_of_port "domain.ml" 42 1248 1252 "domain.ml" 42 1248 1266
)
"domain.ml" 47 1363 1422 "domain.ml" 47 1363 1423
type(
  t
)
ident(
  int_ref d "domain.ml" 46 1345 1354 "domain.ml" 46 1345 1355
)
"domain.ml" 47 1363 1422 "domain.ml" 47 1363 1428
type(
  Xeneventchn.t option
)
"domain.ml" 47 1363 1406 "domain.ml" 47 1363 1429
call(
  stack
)
type(
  string
)
"domain.ml" 47 1363 1364 "domain.ml" 47 1363 1429
call(
  tail
)
type(
  unit
)
"domain.ml" 49 1431 1435 "domain.ml" 49 1431 1441
type(
  t -> unit
)
ident(
  def notify "domain.ml" 55 1586 1586 "domain.ml" 1 0 -1
)
"domain.ml" 49 1431 1442 "domain.ml" 49 1431 1445
type(
  t
)
ident(
  def dom "domain.ml" 49 1431 1448 "domain.ml" 53 1553 1584
)
"domain.ml" 49 1431 1454 "domain.ml" 49 1431 1457
type(
  t
)
ident(
  int_ref dom "domain.ml" 49 1431 1442 "domain.ml" 49 1431 1445
)
"domain.ml" 49 1431 1454 "domain.ml" 49 1431 1462
type(
  Xeneventchn.t option
)
"domain.ml" 50 1468 1470 "domain.ml" 50 1468 1474
type(
  Xeneventchn.t option
)
"domain.ml" 51 1478 1479 "domain.ml" 51 1478 1483
type(
  (Xenctrl.domid -> unit, unit, string, unit) format4 ->
  Xenctrl.domid -> unit
)
ident(
  int_ref warn "domain.ml" 20 732 736 "domain.ml" 20 732 740
)
"domain.ml" 51 1478 1484 "domain.ml" 51 1478 1530
type(
  (Xenctrl.domid -> unit, unit, string, unit) format4
)
"domain.ml" 51 1478 1531 "domain.ml" 51 1478 1534
type(
  t
)
ident(
  int_ref dom "domain.ml" 49 1431 1442 "domain.ml" 49 1431 1445
)
"domain.ml" 51 1478 1531 "domain.ml" 51 1478 1537
type(
  Xenctrl.domid
)
"domain.ml" 51 1478 1479 "domain.ml" 51 1478 1537
call(
  tail
)
type(
  unit
)
"domain.ml" 52 1538 1545 "domain.ml" 52 1538 1549
type(
  Xeneventchn.t
)
ident(
  def port "domain.ml" 53 1553 1554 "domain.ml" 53 1553 1584
)
"domain.ml" 52 1538 1540 "domain.ml" 52 1538 1549
type(
  Xeneventchn.t option
)
"domain.ml" 53 1553 1554 "domain.ml" 53 1553 1566
type(
  Event.t -> Xeneventchn.t -> unit
)
ident(
  ext_ref Event.notify
)
"domain.ml" 53 1553 1567 "domain.ml" 53 1553 1570
type(
  t
)
ident(
  int_ref dom "domain.ml" 49 1431 1442 "domain.ml" 49 1431 1445
)
"domain.ml" 53 1553 1567 "domain.ml" 53 1553 1579
type(
  Event.t
)
"domain.ml" 53 1553 1580 "domain.ml" 53 1553 1584
type(
  Xeneventchn.t
)
ident(
  int_ref port "domain.ml" 52 1538 1545 "domain.ml" 52 1538 1549
)
"domain.ml" 53 1553 1554 "domain.ml" 53 1553 1584
call(
  tail
)
type(
  unit
)
"domain.ml" 49 1431 1448 "domain.ml" 53 1553 1584
type(
  unit
)
"domain.ml" 55 1586 1590 "domain.ml" 55 1586 1606
type(
  t -> unit
)
ident(
  def bind_interdomain "domain.ml" 60 1761 1761 "domain.ml" 1 0 -1
)
"domain.ml" 55 1586 1607 "domain.ml" 55 1586 1610
type(
  t
)
ident(
  def dom "domain.ml" 56 1613 1614 "domain.ml" 57 1693 1758
)
"domain.ml" 56 1613 1614 "domain.ml" 56 1613 1617
type(
  t
)
ident(
  int_ref dom "domain.ml" 55 1586 1607 "domain.ml" 55 1586 1610
)
"domain.ml" 56 1613 1632 "domain.ml" 56 1613 1654
type(
  Event.t -> Xenctrl.domid -> int -> Xeneventchn.t
)
ident(
  ext_ref Event.bind_interdomain
)
"domain.ml" 56 1613 1655 "domain.ml" 56 1613 1658
type(
  t
)
ident(
  int_ref dom "domain.ml" 55 1586 1607 "domain.ml" 55 1586 1610
)
"domain.ml" 56 1613 1655 "domain.ml" 56 1613 1667
type(
  Event.t
)
"domain.ml" 56 1613 1668 "domain.ml" 56 1613 1671
type(
  t
)
ident(
  int_ref dom "domain.ml" 55 1586 1607 "domain.ml" 55 1586 1610
)
"domain.ml" 56 1613 1668 "domain.ml" 56 1613 1674
type(
  Xenctrl.domid
)
"domain.ml" 56 1613 1675 "domain.ml" 56 1613 1678
type(
  t
)
ident(
  int_ref dom "domain.ml" 55 1586 1607 "domain.ml" 55 1586 1610
)
"domain.ml" 56 1613 1675 "domain.ml" 56 1613 1690
type(
  int
)
"domain.ml" 56 1613 1631 "domain.ml" 56 1613 1691
call(
  stack
)
type(
  Xeneventchn.t
)
"domain.ml" 56 1613 1626 "domain.ml" 56 1613 1691
type(
  Xeneventchn.t option
)
"domain.ml" 56 1613 1614 "domain.ml" 56 1613 1691
type(
  unit
)
"domain.ml" 57 1693 1694 "domain.ml" 57 1693 1699
type(
  (Xenctrl.domid -> string -> unit, unit, string, unit) format4 ->
  Xenctrl.domid -> string -> unit
)
ident(
  int_ref debug "domain.ml" 19 689 693 "domain.ml" 19 689 698
)
"domain.ml" 57 1693 1700 "domain.ml" 57 1693 1725
type(
  (Xenctrl.domid -> string -> unit, unit, string, unit) format4
)
"domain.ml" 57 1693 1726 "domain.ml" 57 1693 1729
type(
  t
)
ident(
  int_ref dom "domain.ml" 55 1586 1607 "domain.ml" 55 1586 1610
)
"domain.ml" 57 1693 1726 "domain.ml" 57 1693 1732
type(
  Xenctrl.domid
)
"domain.ml" 57 1693 1734 "domain.ml" 57 1693 1748
type(
  Xeneventchn.t option -> string
)
ident(
  int_ref string_of_port "domain.ml" 42 1248 1252 "domain.ml" 42 1248 1266
)
"domain.ml" 57 1693 1749 "domain.ml" 57 1693 1752
type(
  t
)
ident(
  int_ref dom "domain.ml" 55 1586 1607 "domain.ml" 55 1586 1610
)
"domain.ml" 57 1693 1749 "domain.ml" 57 1693 1757
type(
  Xeneventchn.t option
)
"domain.ml" 57 1693 1733 "domain.ml" 57 1693 1758
call(
  stack
)
type(
  string
)
"domain.ml" 57 1693 1694 "domain.ml" 57 1693 1758
call(
  tail
)
type(
  unit
)
"domain.ml" 56 1613 1614 "domain.ml" 57 1693 1758
type(
  unit
)
"domain.ml" 60 1761 1765 "domain.ml" 60 1761 1770
type(
  t -> unit
)
ident(
  def close "domain.ml" 69 1975 1975 "domain.ml" 1 0 -1
)
"domain.ml" 60 1761 1771 "domain.ml" 60 1761 1774
type(
  t
)
ident(
  def dom "domain.ml" 61 1777 1778 "domain.ml" 67 1970 1973
)
"domain.ml" 61 1777 1778 "domain.ml" 61 1777 1783
type(
  (Xenctrl.domid -> string -> unit, unit, string, unit) format4 ->
  Xenctrl.domid -> string -> unit
)
ident(
  int_ref debug "domain.ml" 19 689 693 "domain.ml" 19 689 698
)
"domain.ml" 61 1777 1784 "domain.ml" 61 1777 1811
type(
  (Xenctrl.domid -> string -> unit, unit, string, unit) format4
)
"domain.ml" 61 1777 1812 "domain.ml" 61 1777 1815
type(
  t
)
ident(
  int_ref dom "domain.ml" 60 1761 1771 "domain.ml" 60 1761 1774
)
"domain.ml" 61 1777 1812 "domain.ml" 61 1777 1818
type(
  Xenctrl.domid
)
"domain.ml" 61 1777 1820 "domain.ml" 61 1777 1834
type(
  Xeneventchn.t option -> string
)
ident(
  int_ref string_of_port "domain.ml" 42 1248 1252 "domain.ml" 42 1248 1266
)
"domain.ml" 61 1777 1835 "domain.ml" 61 1777 1838
type(
  t
)
ident(
  int_ref dom "domain.ml" 60 1761 1771 "domain.ml" 60 1761 1774
)
"domain.ml" 61 1777 1835 "domain.ml" 61 1777 1843
type(
  Xeneventchn.t option
)
"domain.ml" 61 1777 1819 "domain.ml" 61 1777 1844
call(
  stack
)
type(
  string
)
"domain.ml" 61 1777 1778 "domain.ml" 61 1777 1844
call(
  stack
)
type(
  unit
)
"domain.ml" 62 1846 1859 "domain.ml" 62 1846 1862
type(
  t
)
ident(
  int_ref dom "domain.ml" 60 1761 1771 "domain.ml" 60 1761 1774
)
"domain.ml" 62 1846 1859 "domain.ml" 62 1846 1867
type(
  Xeneventchn.t option
)
"domain.ml" 63 1873 1876 "domain.ml" 63 1873 1880
type(
  Xeneventchn.t option
)
"domain.ml" 63 1873 1884 "domain.ml" 63 1873 1886
type(
  unit
)
"domain.ml" 64 1887 1895 "domain.ml" 64 1887 1899
type(
  Xeneventchn.t
)
ident(
  def port "domain.ml" 64 1887 1903 "domain.ml" 64 1887 1933
)
"domain.ml" 64 1887 1890 "domain.ml" 64 1887 1899
type(
  Xeneventchn.t option
)
"domain.ml" 64 1887 1903 "domain.ml" 64 1887 1915
type(
  Event.t -> Xeneventchn.t -> unit
)
ident(
  ext_ref Event.unbind
)
"domain.ml" 64 1887 1916 "domain.ml" 64 1887 1919
type(
  t
)
ident(
  int_ref dom "domain.ml" 60 1761 1771 "domain.ml" 60 1761 1774
)
"domain.ml" 64 1887 1916 "domain.ml" 64 1887 1928
type(
  Event.t
)
"domain.ml" 64 1887 1929 "domain.ml" 64 1887 1933
type(
  Xeneventchn.t
)
ident(
  int_ref port "domain.ml" 64 1887 1895 "domain.ml" 64 1887 1899
)
"domain.ml" 64 1887 1903 "domain.ml" 64 1887 1933
call(
  stack
)
type(
  unit
)
"domain.ml" 62 1846 1847 "domain.ml" 65 1934 1938
type(
  unit
)
"domain.ml" 66 1940 1941 "domain.ml" 66 1940 1954
type(
  Xenmmap.mmap_interface -> unit
)
ident(
  ext_ref Xenmmap.unmap
)
"domain.ml" 66 1940 1955 "domain.ml" 66 1940 1958
type(
  t
)
ident(
  int_ref dom "domain.ml" 60 1761 1771 "domain.ml" 60 1761 1774
)
"domain.ml" 66 1940 1955 "domain.ml" 66 1940 1968
type(
  Xenmmap.mmap_interface
)
"domain.ml" 66 1940 1941 "domain.ml" 66 1940 1968
type(
  unit
)
"domain.ml" 67 1970 1971 "domain.ml" 67 1970 1973
type(
  unit
)
"domain.ml" 66 1940 1941 "domain.ml" 67 1970 1973
type(
  unit
)
"domain.ml" 62 1846 1847 "domain.ml" 67 1970 1973
type(
  unit
)
"domain.ml" 61 1777 1778 "domain.ml" 67 1970 1973
type(
  unit
)
"domain.ml" 69 1975 1979 "domain.ml" 69 1975 1983
type(
  Xenctrl.domid -> nativeint -> int -> Xenmmap.mmap_interface -> Event.t -> t
)
ident(
  def make "domain.ml" 79 2159 2159 "domain.ml" 1 0 -1
)
"domain.ml" 69 1975 1984 "domain.ml" 69 1975 1986
type(
  Xenctrl.domid
)
ident(
  def id "domain.ml" 69 1975 1987 "domain.ml" 77 2156 2157
)
"domain.ml" 69 1975 1987 "domain.ml" 69 1975 1990
type(
  nativeint
)
ident(
  def mfn "domain.ml" 69 1975 1991 "domain.ml" 77 2156 2157
)
"domain.ml" 69 1975 1991 "domain.ml" 69 1975 2002
type(
  int
)
ident(
  def remote_port "domain.ml" 69 1975 2003 "domain.ml" 77 2156 2157
)
"domain.ml" 69 1975 2003 "domain.ml" 69 1975 2012
type(
  Xenmmap.mmap_interface
)
ident(
  def interface "domain.ml" 69 1975 2013 "domain.ml" 77 2156 2157
)
"domain.ml" 69 1975 2013 "domain.ml" 69 1975 2021
type(
  Event.t
)
ident(
  def eventchn "domain.ml" 69 1975 2024 "domain.ml" 77 2156 2157
)
"domain.ml" 70 2026 2032 "domain.ml" 70 2026 2034
type(
  Xenctrl.domid
)
ident(
  int_ref id "domain.ml" 69 1975 1984 "domain.ml" 69 1975 1986
)
"domain.ml" 71 2036 2043 "domain.ml" 71 2036 2046
type(
  nativeint
)
ident(
  int_ref mfn "domain.ml" 69 1975 1987 "domain.ml" 69 1975 1990
)
"domain.ml" 72 2048 2063 "domain.ml" 72 2048 2074
type(
  int
)
ident(
  int_ref remote_port "domain.ml" 69 1975 1991 "domain.ml" 69 1975 2002
)
"domain.ml" 73 2076 2089 "domain.ml" 73 2076 2098
type(
  Xenmmap.mmap_interface
)
ident(
  int_ref interface "domain.ml" 69 1975 2003 "domain.ml" 69 1975 2012
)
"domain.ml" 74 2100 2112 "domain.ml" 74 2100 2120
type(
  Event.t
)
ident(
  int_ref eventchn "domain.ml" 69 1975 2013 "domain.ml" 69 1975 2021
)
"domain.ml" 75 2122 2130 "domain.ml" 75 2122 2134
type(
  Xeneventchn.t option
)
"domain.ml" 76 2136 2150 "domain.ml" 76 2136 2155
type(
  bool
)
"domain.ml" 69 1975 2024 "domain.ml" 77 2156 2157
type(
  t
)
"domain.ml" 79 2159 2163 "domain.ml" 79 2159 2170
type(
  t -> bool
)
ident(
  def is_dom0 "domain.ml" 79 2159 2183 "domain.ml" 1 0 -1
)
"domain.ml" 79 2159 2171 "domain.ml" 79 2159 2172
type(
  t
)
ident(
  def d "domain.ml" 79 2159 2175 "domain.ml" 79 2159 2183
)
"domain.ml" 79 2159 2175 "domain.ml" 79 2159 2176
type(
  t
)
ident(
  int_ref d "domain.ml" 79 2159 2171 "domain.ml" 79 2159 2172
)
"domain.ml" 79 2159 2175 "domain.ml" 79 2159 2179
type(
  Xenctrl.domid
)
"domain.ml" 79 2159 2180 "domain.ml" 79 2159 2181
type(
  Xenctrl.domid -> Xenctrl.domid -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"domain.ml" 79 2159 2182 "domain.ml" 79 2159 2183
type(
  Xenctrl.domid
)
"domain.ml" 79 2159 2175 "domain.ml" 79 2159 2183
type(
  bool
)
